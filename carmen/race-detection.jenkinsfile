pipeline {
    agent {label 'db-small-ssd'}

    options {
        timestamps ()
        timeout (time: 24, unit: 'HOURS')
        disableConcurrentBuilds(abortPrevious: false)
    }

    environment {
        GORACE = 'halt_on_error=1'
        GOGC = '50'
        GOMEMLIMIT = '60GiB'
        AIDADB = '/mnt/aida-db-central/aida-db'
	    TMPDB = '/mnt/tmp-disk'
    }

    parameters {
        string(defaultValue: "main", description: 'Can be either branch name or commit hash.', name: 'AidaVersion')
        string(defaultValue: "main", description: 'Can be either branch name or commit hash.', name: 'CarmenVersion')
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    currentBuild.description = "Building on ${env.NODE_NAME}"
                }

                checkout scmGit(
                    branches: [[name: "${AidaVersion}"]],
                    userRemoteConfigs: [[
                        url: 'https://github.com/Fantom-foundation/Aida.git'
                    ]]
                )
                sh "git submodule update --init --recursive"

                dir('carmen') {
                    checkout scmGit(
                        branches: [[name: "${CarmenVersion}"]],
                        userRemoteConfigs: [[url: 'https://github.com/Fantom-foundation/Carmen.git']]
                    )
                }
            }
        }

        stage('Build') {
            steps {
                sh "go mod tidy"
                sh "make -j aida-vm-sdb"
                sh 'go test ./...'
            }
        }

        stage('Run unit tests') {
            steps {
                dir('carmen/go') {
                    sh "go test -race ./... -count 1 -timeout 36000s -parallel 2 -p 2"
                }
            }
        }

        stage('Run integration test') {
            steps {
                sh "go run -race ./cmd/aida-vm-sdb  substate --validate-state-hash --db-impl carmen --db-variant go-file --carmen-schema 5 --archive --archive-variant s5 --archive-query-rate 150 --vm-impl lfvm --track-progress --db-tmp=${TMPDB} --aida-db=${AIDADB} 0 1000000"
            }
        }
    }

    post {
        always {
            build job: '/Notifications/slack-notification', parameters: [
                string(name: 'result', value: "${currentBuild.result}"),
                string(name: 'name', value: "${currentBuild.fullDisplayName}"),
                string(name: 'duration', value: "${currentBuild.duration}"),
                string(name: 'url', value: "${currentBuild.absoluteUrl}"),
                string(name: 'user', value: "carmen")
            ]
        }
    }
}
