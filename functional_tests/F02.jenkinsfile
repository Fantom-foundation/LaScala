// Test functional correctness of live-db using mainnet

pipeline {
    agent { label 'aida-db-mainnet' }

    options {
        timestamps ()
        timeout(time: 2, unit: 'DAYS')
    }

    environment {
        PATH = '/usr/local/bin:/usr/bin:/bin:/usr/local/go/bin'
    }

    parameters {
        string(defaultValue: "zero", description: '', name: 'BlockFrom')
        string(defaultValue: "last", description: '', name: 'BlockTo')
        string(defaultValue: "main", description: 'Can be either branch name or commit hash.', name: 'AidaVersion')
        string(defaultValue: "main", description: 'Can be either branch name or commit hash.', name: 'CarmenVersion')
        string(defaultValue: "main", description: 'Can be either branch name or commit hash.', name: 'ToscaVersion')
    }

    stages {
        stage('Build') {
            steps {
                script {
                    currentBuild.description = "Building on ${env.NODE_NAME}"
                }

                checkout scmGit(
                    branches: [[name: "${AidaVersion}"]],
                    userRemoteConfigs: [[
                        credentialsId:  'AidaCI_PR',
                        url: 'https://github.com/Fantom-foundation/Aida.git'
                    ]]
                )
                sh "git submodule update --init --recursive"

                withCredentials([usernamePassword(credentialsId: 'AidaCI_PR', usernameVariable: 'PR_USERNAME', passwordVariable: 'PR_PASSWORD')]) {
                    sh 'echo "machine github.com login $PR_USERNAME password $PR_PASSWORD" >~/.netrc'
                }

                dir('carmen') {
                	checkout scmGit(
                		branches: [[name: "${CarmenVersion}"]],
                		userRemoteConfigs: [[credentialsId:  'AidaCI_PR', url: 'https://github.com/Fantom-foundation/Carmen.git']]
                	)
                }

                dir('tosca') {
                    checkout scmGit(
                        branches: [[name: "${ToscaVersion}"]],
                        userRemoteConfigs: [[credentialsId:  'AidaCI_PR', url: 'https://github.com/Fantom-foundation/Tosca.git']]
                    )
                }

                sh "go mod tidy"
                sh "make all"
            }
        }

        stage('Test stage') {
            steps {
                sh 'echo "Running testing stage"'

                // sh "rm -f *.cpuprofile *.memprofile *.log"

                sh """build/aida-vm-sdb  substate --validate-tx --validate-state-hash \
                                         --db-impl carmen --db-variant go-file --carmen-schema 5 \
                                         --vm-impl lfvm \
                                         --db-tmp /var/opera/Aida/dbtmpjenkins --aida-db /var/opera/Aida/mainnet-data/aida-db \
                                         --track-progress --no-heartbeat-logging \
                                         --memory-breakdown --cpu-profile ${BUILD_NUMBER}.cpuprofile --memory-profile ${BUILD_NUMBER}.memprofile \
                                         ${BlockFrom} ${BlockTo}"""

                // archiveArtifacts artifacts: '*.cpuprofile,*.memprofile,*.log'
            }
        }

        stage('Teardown') {
            steps {
                sh "make clean"
            }
        }
    }
}