// Run unit tests with race detection
pipeline {
    agent { label 'x86-4-16-s' }

    options {
        timestamps()
        timeout(time: 4, unit: 'HOURS')
    }

    environment {
        GORACE = 'halt_on_error=1'
    }

    parameters {
        string(
            name: 'SonicVersion',
            defaultValue: 'develop',
            description: 'Specify the branch name or commit hash.'
        )
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: "${SonicVersion}"]],
                    userRemoteConfigs: [[url: 'https://github.com/Fantom-foundation/Sonic.git']]
                )
                sh 'git submodule update --init --recursive --depth 1'
            }
        }

        stage('build') {
            steps {
                sh 'make'
            }
        }

        stage('unit-tests') {
            steps {
                sh 'make test'
            }
        }

        stage('go-tests-race-dectection') {
            steps {
                sh 'go test -race ./... -count 1'
            }
        }
    }

    post {
        always {
            build job: '/Notifications/slack-notification', parameters: [
                 string(name: 'result', value: currentBuild.result),
                 string(name: 'name', value: currentBuild.fullDisplayName),
                 string(name: 'duration', value: currentBuild.durationString),
                 string(name: 'url', value: currentBuild.absoluteUrl),
                 string(name: 'user', value: 'sonic')
             ]
        }
    }
}
